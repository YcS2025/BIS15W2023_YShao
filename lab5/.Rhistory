knitr::opts_chunk$set(echo = TRUE)
bison<- read::read_csv("data/bison.csv")
bison<- readr::read_csv("data/bison.csv")
dim(bison)
str(bison)
new_bison <- select(bison,"code","sex","weight")
new_bison <- select(bison,"animal_code","animal_sex","animal_weight","animal_yob")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
new_bison <- select(bison,"animal_code","animal_sex","animal_weight","animal_yob")
new_bison <- select(bison,"animal_code","animal_sex","animal_weight","animal_yob")
new_bison
filter(bison,between(animal_yob,1980,1990))
table(decade_date$animal_sex)
decade_date<-filter(bison,between(animal_yob,1980,1990))
table(decade_date$animal_sex)
decade_date<-filter(bison,between(animal_yob,1980,1990))
decade_date
decade_date<-filter(bison,between(animal_yob,1980,1990))
decade_date
decade_male<-filter(decade_date,animal_sex=="M")
mean(decade_male$animal_weight)
decade_female<-filter(decade_date,animal_sex=="F")
mean(decade_female$animal_weight)
str(bison)
anyNA(bison)
decade_date<-filter(bison,between(animal_yob,1980,1990))
anyNa(decade_date)
decade_date<-filter(bison,between(animal_yob,1980,1990))
anyNA(decade_date)
decade_date<-filter(bison,between(animal_yob,1980,1990))
#anyNA(decade_date)
decade_date
bison<- read_csv("data/bison.csv")
decade_date<-filter(bison,between(animal_yob,1979,1991))
#anyNA(decade_date)
decade_date
decade_date<-filter(bison,between(animal_yob,1979,1990))
#anyNA(decade_date)
decade_date
library("tidyverse")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
names(mammals)
mammals <- rename(mammals, genus="Genus", wean_mass="wean mass", max_life= "max. life", litter_size="litter size", litters_per_year="litters/year")
names(mammals)
mammals %>%mutate_if(is.character, as.factor)
mammals %>%
select(family, genus, species, gestation) %>%
filter(gestation>=15)
cool<-mammals %>%
select(family, genus, species, gestation) %>%
filter(gestation>=15)
cool<-mammals %>%
select(family, genus, species, gestation) %>%
filter(gestation>=15)
cool
mammals %>%
select(family, genus, species, gestation) %>%
filter(gestation>=15)
filter(fish, lakeid == "AL")
fish %>%
filter(lakeid=="AL",lakeid=="AR")%>%
filter(between(raddii_length_mm,2,4))
fish %>%
filter(lakeid=="AL",lakeid=="AR")%>%
filter(between(radii_length_mm,2,4))
fish %>%
filter(lakeid=="AL"|lakeid=="AR")%>%
filter(between(radii_length_mm,2,4))
fish %>%
select(lakeid, scalelength) %>%
arrange(scalelength)
fish%>%
filter(fish_id==300)%>%
select("radii_length_mm","scalelength")%>%
arrange(radii_length_mm)
filter(fish,fish_id=="300")
fish%>%
filter(fish_id==300)%>%
select("radii_length_mm","scalelength")%>%
arrange(radii_length_mm)
filter(fish,fish_id=="300")
fish%>%
filter(fish_id==300)%>%
select("radii_length_mm","scalelength")%>%
arrange(radii_length_mm)
fish%>%
mutate(length_half = length/2)%>%
select(fish_id,length,length_half)
mammals%>%
mutate_all(max_life_new ==ifelse(-999,NA,max_life))%>%
arrange(desc(max_life_new))
mammals%>%
mutate(max_life_new ==ifelse(-999,NA,max_life))%>%
arrange(desc(max_life_new))
mammals%>%
mutate(max_life_new == ifelse(-999,NA,max_life))%>%
arrange(desc(max_life))
mammals%>%
mutate(max_life_new = ifelse(-999,NA,max_life))%>%
arrange(desc(max_life))
mammals%>%
mutate(max_life_new = ifelse(-999,NA,max_life))%>%
arrange(desc(max_life_new))
mammals%>%
mutate(max_life_new = ifelse(max_life==-999,NA,max_life))%>%
arrange(desc(max_life_new))
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
name(superhero_info)
names(superhero_info)
superhero_info
names(superhero_info)
superhero_info%>%
mutate_all("")
names(superhero_info)
superhero_info<-rename()
superhero_powers <- janitor::clean_names(superhero_powers)
superhero_powers <- janitor::clean_names(superhero_powers)
superhero_powers <- janitor::clean_names(superhero_powers)
names(superhero_info)
library("janitor")
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
names(superhero_info)
superhero_info<-rename(superhero_info,gender=="Gender",eye_color=="Eye color")
superhero_powers <- janitor::clean_names(superhero_powers)
names(superhero_info)
library("janitor")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
names(superhero_info)
superhero_powers <- janitor::clean_names(superhero_powers)
names(superhero_powers)
tabyl(superhero_info, alignment)
names(superhero_info)
tabyl(superhero_info, alignment)
names(superhero_info)
tabyl(superhero_info, Alignment)
filter(superhero_info,Alignment=="neutral")
superhero_info <- janitor::clean_names(superhero_info)
names(superhero_info)
names(superhero_info)
tabyl(superhero_info, alignment)
filter(superhero_info,alignment=="neutral")
select(superhero_info,"name","alignment","race")
filter(superhero_info,race!="human")
filter(superhero_info,race!="Human")
super_good<- filter(superhero_info,alignment=="good")
super_good
super_bad<- filter(superhero_info,alignment=="bad")
super_bad
tabyl(super_good,race)
filter(super_good,race=="Asgardians")
filter(super_good,race=="Asgardian")
filter(super_bad,gender=="male"&height>200)
filter(super_bad,gender=="Male"&height>200)
tabyl(super_bad,hair_color)
filter(super_good,hair_color==NA)
filter(super_good,hair_color=="NA")
filter(super_good,hair_color=="No Hair")
filter(super_good,hair_color=="No Hair")
filter(super_bad,hair_color=="No Hair")
filter(superhero_info,height>200|weight>=450)
filter(superhero_info,height>300)
mutate(superhero_info,height_weight_ration=height/weight)
mutate(superhero_info,height_weight_ration=height/weight)
arrange(desc(height_weight_ratio))
mutate(superhero_info,height_weight_ratio=height/weight)
arrange(desc(height_weight_ratio))
mutate(superhero_info,height_weight_ratio=height/weight)
arrange(superhero_info,desc(height_weight_ratio))
