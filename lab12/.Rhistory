knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
library(tidyverse)
library(palmerpenguins)
runApp("plot_iris.R")
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm")
)
server <- function(input, output) {
}
shinyApp(ui, server)
names(penguins)
penguins%>%
ggplot(aes(x=bill_length_mm,y=body_mass_g))+
geom_point()
penguins%>%
ggplot(aes(x=bill_length_mm,y=body_mass_g))+
geom_point(na.rm = T)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
plotOutput("plot",width = "500px",height = "400px")
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot",width = "500px",height = "400px")
)
server <- function(input, output) {
output$plot<-renderPlot(
ggplot(data = penguins,aes_string(x=input$x,y=input$y,color=species)
)+geom_point()+
theme_light(base_size = 18)
})
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot",width = "500px",height = "400px")
)
server <- function(input, output) {
output$plot<-renderPlot({
ggplot(data = penguins,aes_string(x=input$x,y=input$y,color=species)
)+geom_point()+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot",width = "500px",height = "400px")
)
server <- function(input, output) {
output$plot<-renderPlot({
ggplot(data = penguins,aes_string(x=input$x,y=input$y,color='species')
)+geom_point()+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange%>%
ggplot(aes(x=locomotion,fill=thermoregulation))+
geom_col()
homerange%>%
ggplot(aes(x=locomotion,fill=thermoregulation))+
geom_bar()
homerange%>%
ggplot(aes(x=locomotion,fill=thermoregulation))+
geom_bar()
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("locomotion"),
selected = "locomotion"),
selectInput("y", "Select Y Variable", choices = c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot",width = "500px",height = "400px")
)
server <- function(input, output) {
output$plot<-renderPlot({
ggplot(data = homerange,aes_string(x=input$x,y=input$y)
)+geom_point()+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
homerange%>%
ggplot(aes(x=locomotion,fill=thermoregulation))+
geom_bar()
ui <- fluidPage(
radioButtons("x","Select fill variable",choices = "trophic.guild","thermoregulation"),
selected="trophic.guild",
plotOutput("plot")
)
server <- function(input, output) {
output$plot<-renderPlot({
ggplot(data = homerange,aes_string(x="locomotion",fill=input$x)
)+geom_bar(position = "dodge")
})
}
shinyApp(ui, server)
homerange%>%
ggplot(aes(x=locomotion,fill=thermoregulation))+
geom_bar()
ui <- fluidPage(
radioButtons("x","Select fill variable",choices = c("trophic.guild","thermoregulation")),
selected="trophic.guild",
plotOutput("plot")
)
server <- function(input, output) {
output$plot<-renderPlot({
ggplot(data = homerange,aes_string(x="locomotion",fill=input$x)
)+geom_bar(position = "dodge")
})
}
shinyApp(ui, server)
homerange%>%
ggplot(aes(x=locomotion,fill=thermoregulation))+
geom_bar()
ui <- fluidPage(
radioButtons("x","Select fill variable",choices = c("trophic.guild","thermoregulation")),
selected="trophic.guild",
plotOutput("plot")
)
server <- function(input, output) {
output$plot<-renderPlot({
ggplot(data = homerange,aes_string(x="locomotion",fill=input$x)
)+geom_bar(position = "dodge")+
labs(x=NULL,y=NULL, fill="fill variable")
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
runApp('homerangeApp.R')
homerange%>%
filter(taxon="mammal")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.7)
homerange%>%
filter(taxon="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.7)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.7)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
table(homerange$taxon)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
ui <- fluidPage(titlePanel("taxon distribution"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
table(homerange$taxon)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
ui <- fluidPage(titlePanel("taxon distribution"),
radioButtons("x", "Select Fill Variable", choices=c("birds", "lake fishes","lizards","mammals","marine fishes","river fishes","snakes","tortoises","turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="log10.mass", fill=input$x)) +
geom_density(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
table(homerange$taxon)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
ui <- fluidPage(titlePanel("taxon distribution"),
selectInput("x", "Select Fill Variable", choices=c("birds", "lake fishes","lizards","mammals","marine fishes","river fishes","snakes","tortoises","turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="log10.mass", fill=input$x)) +
geom_density(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
table(homerange$taxon)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
ui <- fluidPage(titlePanel("taxon distribution"),
selectInput("x", "Select Fill Variable", choices=c("birds", "lake fishes","lizards","mammals","marine fishes","river fishes","snakes","tortoises","turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="log10.hra", fill=input$x)) +
geom_density(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
table(homerange$taxon)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
ui <- fluidPage(titlePanel("taxon distribution"),
selectInput("x", "Select Fill Variable", choices=c("birds", "lake fishes","lizards","mammals","marine fishes","river fishes","snakes","tortoises","turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
table(homerange$taxon)
homerange%>%
filter(taxon=="mammals")%>%
ggplot(aes(x=log10.mass))+
geom_density(fill="blue",color="purple",alpha=0.6
)
ui <- fluidPage(titlePanel("taxon distribution"),
selectInput("x", "Select Fill Variable", choices=c("birds", "lake fishes","lizards","mammals","marine fishes","river fishes","snakes","tortoises","turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density(fill="pink",color="grey",alpha=0.3)
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
#install.packages("shinydashboard")
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Penguins Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
